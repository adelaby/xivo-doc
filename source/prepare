#!/usr/bin/python
# -*- coding: utf-8 -*-

import os
import conf
import re
from subprocess import PIPE
import subprocess

current_version = conf.version


class Prepare(object):
    def __init__(self, version):
        dir_version = os.path.join('/var/www/docs/', version)
        if not os.access(dir_version, os.W_OK):
            os.makedirs(dir_version, 0765)


class RetrieveGitInfos(object):
    def __init__(self):
        self.list_tag = []

    def get_last_tag(self):
        comman_list_tags = ['git', 'tag', '-l']
        try:
            p = subprocess.Popen(comman_list_tags, stdout=PIPE, stderr=PIPE, close_fds=True)
        except (OSError, subprocess.CalledProcessError):
            raise "Error while executing %s" % comman_list_tags.join(' ')

        valid_tag = re.compile(r"^(squeeze-)?xivo-(skaro-)?([0-9\.]+)$")
        if p.stdout:
            for tag in p.stdout.readlines():
                if valid_tag.match(tag):
                    tag_version = valid_tag.match(tag).group(3)
                    self.list_tag.append(tag_version)
                    Prepare(tag_version)
        return self.list_tag[-1]


def main():
    Prepare(current_version)
    rgi = RetrieveGitInfos()
    print rgi.get_last_tag()


if __name__ == '__main__':
    main()
